catalog.go
fs.go
fs_local.go
fs_remote.go
creation_time.go
creation_time_darwin.go
creation_time_linux.go
creation_time_windows.go
notebrew.go
dev.go
site_generator.go
regenerate.go
site_json.go
postlist_json.go
rootdirectory.go
directory.go
file.go
createsite.go
deletesite.go
...
serve_http.go
notebrew/exit.go
notebrew/exit_windows.go
notebrew/sqlite_cgo.go
notebrew/sqlite_nocgo.go
notebrew/server.go
notebrew/main.go
notebrew/open_browser.go

TODO: don't regenerate silently; every action that does regenerate a file (e.g. save page, save post), inform the user how many files were regenerated and how long it took as well as a helpful view link to the page | post | post list's first page.
TODO: actually, don't overwrite/rename markdown post files if the user created it externally. Instead, it just means the post's creationTime cannot be determined when generating the atom feed, as a result the tag URL will not use the timestamp but the filename instead (sans the .md extension).
    - This means that it will not be a good atom feed citizen, but it means that users can create and edit markdown files from their text editor without worrying about generating the timestamp prefix artificially. It's a education issue. We can educate users later on that they should strive to include the timestamp prefix in their posts if they want their atom feed postIDs to be stable, otherwise don't rename the post filenames at all.
TODO: oh my god, every action related to creating a page or deleting a page (that includes copying, moving and renaming pages) has to honor the same system where the outputDir /output/abc/ actually is co-owned by two files, /pages/abc.html and /pages/abc/. If we create files via copying/move/rename, we must copy only the relevant files in the outputDir. If we delete files due to a delete/move/rename, we must only delete the relevant files in the outputDir.
TODO: once we finish porting nb9 over to nb10, look into accepting a user struct instead of username in the handlers and decide what to do if the account is disabled.
TODO: copy a private implementation of certmagic.MatchWildcard so that notebrew itself doesn't rely on certmagic.

sample template error message
template: site_json.html:58:44: executing "site_json.html" at <eq $.CodeStyle $codeStyle>: error calling eq: incompatible types for comparison
