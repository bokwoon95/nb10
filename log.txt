catalog.go
fs.go
fs_local.go
fs_remote.go
creation_time.go
creation_time_darwin.go
creation_time_linux.go
creation_time_windows.go
notebrew.go
dev.go
site_generator.go
regenerate.go => regenerated site (x files in xxx duration) view
site_json.go => regenerated site (x files in xxx duration) view
postlist_json.go => regenerated post list (x files in xxx duration) view
rootdirectory.go
directory.go
file.go => regenerated page|post in xxx duration view
createsite.go
deletesite.go
createfolder.go
createfile.go => generated page|post in xxx duration view
delete.go
search.go
rename.go
uploadfile.go
clipboard.go
serve_http.go
notebrew/exit.go
notebrew/exit_windows.go
notebrew/sqlite_cgo.go
notebrew/sqlite_nocgo.go
notebrew/server.go
notebrew/main.go
notebrew/open_browser.go

- The main guide will be "if you know how to write HTML, just put HTML in these pages and they'll be included"
- The next guide will be "if you want to include CSS and JS and images, create/upload them via the input[type=file] and you can mention it by the name you created/uploaded it with"
- Then "if you want to use templates globally, put them in /themes/ and you can reference these templates everywhere with {{ template "/themes/.../xxx.html" }}
    - Follow up with explaining that if you invoke an external template, all the internal templates for that external templates will also be brought into scope. If there are any template name conflicts, the local one wins.
- Then "likewise, if you want to reference images and assets globally, put them in /themes/ and you can reference these assets globally with src='/themes/.../xxx.jpeg' or src='/themes/.../xxx.js'"

TODO: file.go/image: if saving the caption for an image, regenerate the page or post that the image belongs to.
TODO: directory.html: figure out how to display a small image preview that looks natural in list view.
    - NOTE: make use of ImgDomain + isS3Storage if present.
TODO: figure out a way to display the caption (actually the best way is probably display images one after another top down, no grid. That way we can seamlessly display filenames and captions as well).
    - In fact people can bodge interspersing images and text by having text display under the image as if it were part of the post.
- TODO: allow people to browse next image and previous image when in the image viewer.
TODO: convert the "how do I include assets?" and "how do I include alt text?" links to details/summary popups.
TODO: search.html should display image previews if the result is an image
TODO: start on the user accounts soon, then we can throw it up behind Hetzner.

sample template error message
template: site_json.html:58:44: executing "site_json.html" at <eq $.CodeStyle $codeStyle>: error calling eq: incompatible types for comparison
