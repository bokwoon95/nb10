catalog.go
fs.go
fs_local.go
fs_remote.go
creation_time.go
creation_time_darwin.go
creation_time_linux.go
creation_time_windows.go
notebrew.go
dev.go
site_generator.go
regenerate.go => regenerated site (x files in xxx duration) view
site_json.go => regenerated site (x files in xxx duration) view
postlist_json.go => regenerated post list (x files in xxx duration) view
rootdirectory.go
directory.go
file.go => regenerated page|post in xxx duration view
createsite.go
deletesite.go
createfolder.go
createfile.go => generated page|post in xxx duration view
(delete.go)
search.go
clipboard.go
uploadfile.go
rename.go
serve_http.go
notebrew/exit.go
notebrew/exit_windows.go
notebrew/sqlite_cgo.go
notebrew/sqlite_nocgo.go
notebrew/server.go
notebrew/main.go
notebrew/open_browser.go

TODO: rename Files to DeletedFiles in the delete.go response struct AND tweak the HTML to fix.
TODO: instead of putting Count/TimeTaken/TemplateError fields in every response where we potentially regenerate files, put a single RegenerationStats field. Tweak all html files to accomodate.
BUG: creating a new post category does not seem to populate the post.html and postlist.html files inside.
BUG: posts/post.html should not have a "view: page", and saving it should mention the number of posts regenerated but should not link to any particular post.
BUG: for some reason output/posts/postlist/index.html exists, investigate what is causing it to appear and if it appears on a default site creation or site regeneration.
TODO: oh my god, every action related to creating a page or deleting a page (that includes copying, moving and renaming pages) has to honor the same system where the outputDir /output/abc/ actually is co-owned by two files, /pages/abc.html and /pages/abc/. If we create files via copying/move/rename, we must copy only the relevant files in the outputDir. If we delete files due to a delete/move/rename, we must only delete the relevant files in the outputDir.
TODO: in serveFile we can actually track the number of times a resource was requested (done in a goroutine so as to not affect serving the file). This lets us do rudimentary bandwidth calculations by multiplying count * size in case we notice too much bandwidth is being consumed. It also serves as a rough estimate of page popularity. Bytes served by the CDN/S3 will not be tracked, but hopefully we can impose usage caps to prevent runaway costs from bankrupting us.
TODO: for page assets, we need to include a little help link "how do I include assets?" that directs users to the guide for linking to assets in HTML.
    - The main guide will be "if you know how to write HTML, just put HTML in these pages and they'll be included"
    - The next guide will be "if you want to include CSS and JS and images, create/upload them via the input[type=file] and you can mention it by the name you created/uploaded it with"
    - Then "if you want to use templates globally, put them in /themes/ and you can reference these templates everywhere with {{ template "/themes/.../xxx.html" }}
        - Follow up with explaining that if you invoke an external template, all the internal templates for that external templates will also be brought into scope. If there are any template name conflicts, the local one wins.
    - Then "likewise, if you want to reference images and assets globally, put them in /themes/ and you can reference these assets globally with src='/themes/.../xxx.jpeg' or src='/themes/.../xxx.js'"
TODO: once we finish porting nb9 over to nb10, look into accepting a user struct instead of username in the handlers and decide what to do if the account is disabled.
TODO: RE: alt text is embedded into the caption and indicated by whether the first line starts with !alt
TODO: copy a private implementation of certmagic.MatchWildcard so that notebrew itself doesn't rely on certmagic.

CHECK: site regeneration works
CHECK: saving post.html/postlist.html doesn't generate an output post

sample template error message
template: site_json.html:58:44: executing "site_json.html" at <eq $.CodeStyle $codeStyle>: error calling eq: incompatible types for comparison
