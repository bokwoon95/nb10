schema.go
id.go
object_storage.go
fs.go
fs_dir.go
fs_database.go
creation_time.go
creation_time_darwin.go
creation_time_linux.go
creation_time_windows.go
mailer.go
notebrew.go
developer_mode.go
site_generator.go

site_json.go
postlist_json.go
rootdirectory.go
directory.go
image.go
file.go
createsite.go
deletesite.go
createfolder.go
createfile.go
delete.go
search.go
rename.go
uploadfile.go
clipboard.go

applytheme.go
calculatestorage.go
cancelexport.go
cancelimport.go
changepassword.go
createsession.go
deletesession.go
export.go
exports.go
import.go
imports.go
invite.go
login.go
logout.go
pin.go
profile.go
resetpassword.go
resettheme.go
unpin.go
updateemail.go
updateprofile.go

serve_http.go

cli/config_cmd.go
cli/sqlite_cgo.go
cli/sqlite_nocgo.go
cli/cli.go
cli/createinvite_cmd.go
cli/createsite_cmd.go
cli/createuser_cmd.go
cli/deleteinvite_cmd.go
cli/deletesite_cmd.go
cli/deleteuser_cmd.go
cli/hashpassword_cmd.go
cli/permissions_cmd.go
cli/resetpassword_cmd.go
cli/start_cmd.go
cli/status_cmd.go
cli/stop_cmd.go

exit.go
exit_windows.go
open_browser.go
main.go

notebrew/exit.go
notebrew/exit_windows.go
notebrew/sqlite_cgo.go
notebrew/sqlite_nocgo.go
notebrew/server.go
notebrew/main.go
notebrew/open_browser.go

package gui

package notebrewlive
the admin page needs to:
- let me customize the shell script used to flag out bad sites
    - doesn't even have to be bad sites. it can fetch all unchecked sites in general. once a site is checked to be safe, it goes into the moderation database so that it doesn't have to be checked again.
    - oh: I should be able to write multiple scripts and be given the option to see each of their results. and then it's all deduplicated again in the spam database so each site is only inserted once.
- make sure to include the dates the bad site was created and when it was flagged into the database! this will be useful for analytics in the future.
- for each site flagged out by the shell script, give me a convenient link to browse the site's different pages.
- give me a button to delete a site (this dumps it into a backblaze bucket so that we can use it for future spam data training)
- give me a button to disable a user account
- through it all, all actions must be recorded down so that we know exactly which sites were deleted and who those sites belonged to (again for future data training, but it also lets us link a specific site to a specific object in the backblaze bucket). This means the spam database must be *persistent*!
- show me CDN usage by site (need to communicate with BunnyCDN's API). that's about it, since I doubt many users will trigger this check. if someone does, I can handle it manually first.

notebrew.com/docs/
notebrew.com/docs/how-to-install-themes/
notebrew.com/docs/how-to-host-your-own-themes/
notebrew.com/docs/the-essential-guide-to-writing-html-pages-in-notebrew/
notebrew.com/docs/api-documentation/

template tutorial => /docs/the-essential-guide-to-writing-html-pages-in-notebrew/#internal-templates
markdown tutorial => /docs/markdown-tutorial/

localhost:6444/files/

"View the docs"
- How to install themes
- How to create custom HTML pages (essential guide) (embedded)
- How to export and host your own themes
- Self hosting tutorial
- Advanced self hosting tutorial
- Admin tutorial
- API documentation (embedded)

Running it as a desktop program.
- Where to download
- double click the binary. you should see this.
- Here are where the files are located. You can change the location by editing the config dir (?)

Self hosting your own instance.
- Automatic HTTPS

Themes showcase.
- How to download and install themes
- How to export and host your own themes

API Documentation.

TODO: themes: default, gallery, steve, parchment
TODO: implement gallery theme such that gallery.html can be dropped into any existing theme and it will replace the template "content".
    - it has to only depend on baseline.css
TODO: figure out how to implement "press any key to exit" on macOS.
    - include a "you may close this window" message in case they're not savvy enough to realize only enter works.
TODO: figure out if you can reduce the max-width to 80ch on the default theme as well (see how it plays with the image gallery?)
    NOTE: stevelosh.com, medium and substack all have about the same width. Emulate it!
    NOTE: don't constrain max-width on the body. instead use class='max-width-80ch pa0 mv2 center' hell, we could add max-width-100ch and max-width-120ch as well.
TODO: come up with a unified stylesheet and use it as the base for the default theme + all other themes.
    TODO: once you come up with it, update the default theme in the embedded index.html/404.html/post.html/postlist.html
TODO: see if you can reduce the vertical spacing for the default theme, so the navbar area looks smaller.
NOTE: we don't actually need to embed the API documentation into the binary yet. We can just link them to the site. When the API starts changing for notebrew, then we can consider baking in the API documentation into each binary so that it is always accurate.
TODO: need to add a markdown reference for all textareas that accept markdown text (site_json.html, file.html, image.html...)
    TODO: the tutorial lives in /files/static/markdown-reference-6a0f0a00.html
    TODO: /files/static/essential-guide-6a0f0a00.html (user tutorials)
    TODO: /files/static/template-reference-6a0f0a00.html
    TODO: /files/static/self-hosting-tutorial-6a0f0a00.html
        TODO: we may also need a separate tutorial on how to purchase a VPS and gain console access. again, emphasize how it does not assume any prior skills other than following instructions (we want rando housewives to be able to follow them). This has to be hosted on notebrew.org itself because the admin dashboard screenshots may change very often.
        TODO: digitalocean | linode | vultr | ovh | buyvm, emphasize that if you can pay for Netflix/Spotify every month you can pay for a VPS every month.
    TODO: /files/static/advanced-self-hosting-tutorial-6a0f0a00.html
    TODO: /files/static/admin-tutorial-6a0f0a00.html
TODO: add a hash to the response headers so that clients can do a GET to synchronize their local copy with remote
    TODO: this is mostly for local instances that need to synchronize files with a remote Notebrew server (think apps, local CLI tools).
TODO: tests
TODO: embed the tutorial as /files/tutorial/, and also embed the chroma style gallery as /files/chroma-style-gallery/
TODO: include handwritten API documentation, involving POST-ing to /login/.
    TODO: make sure to warn them if they get the password request wrong three times it will activate the captcha after which bots will likely break, this can be cleared by the user grabbing the
TODO: figure out how to make a pluggable header image in a theme
    - /themes/background.jpg: full-size image that occupies the whole screen
    - /themes/banner.jpg:     long jpg that occupies a strip on the top of the screen
    - /themes/logo.jpg:       logo of the website, should the user choose to make one (refer to financial samurai as well as stratechery.com)
    - /themes/profile.jpg:    profile photo (NO! all profile photos and their associated desciptions are a purely userland thing)
        - maybe too difficult to make it work because we need it to play nice w the background color and all that jazz (not hot swappable)
TODO: how to configure client-side SSL for connecting to Postgres/MySQL?

DNS testcases:
- Newly created server, no DNS entries configured. Set the cmsdomain to notebrew.com and contentdomain nbrew.io.
    - want: the server starts and listens on :443, but no servers should be provisioned since DNS resolution should have failed for the domains.
    - DONE
- Fresh server, no DNS entries. Set port to 80.
    - (if the user wants to test if their server can connect to the internet)
    - want: the server starts on :80 (no SSL certificates configured) using CMSDomain and ContentDomain set to the server's IP address, and everything behaves as it does on localhost (except without the subdomains).
    - DONE
- Fresh server, with DNS entry set to notebrew.com. Set port to 80, cmsdomain to notebrew.com.
    - (if the user wants to test if their DNS is configured correctly. only one record is required, either an @/A record or an @/AAAA record)
    - want: the server starts on :80 (no SSL certificates configured) CMSDomain and ContentDomain set to the same thing, and everything behaves as it does on localhost (except without the subdomains).
    - you are also no longer able to reach the site using the IP address, must use the domain name.
The main usefulness of being able to run notebrew on plain IP addresses or HTTP is that new users can run it first without worrying about any domain name configuration or SSL certificate configuration and ascertain if they can connect to their server in the first place.

# User tutorials #

- The main guide will be "if you know how to write HTML, just put HTML in these pages and they'll be included"
- The next guide will be "if you want to include CSS and JS and images, create/upload them via the input[type=file] and you can mention it by the name you created/uploaded it with"
- Then "if you want to use templates globally, put them in /themes/ and you can reference these templates everywhere with {{ template "/themes/.../xxx.html" }}
- Follow up with explaining that if you invoke an external template, all the internal templates for that external templates will also be brought into scope. If there are any template name conflicts, the local one wins.
- Then "likewise, if you want to reference images and assets globally, put them in /themes/ and you can reference these assets globally with src='/themes/.../xxx.jpeg' or src='/themes/.../xxx.js'"
- NOTE: need to insert an addenum: sometimes site generation may not be perfect, and miss out something. If you notice anything off, head into site.json and simply hit 'save' to regenerate your entire site from scratch.
- NOTE: inform the user of certain opinionated styles, for example HTML using single quotes instead of double quotes (so that double quotes can be used for HTML template string literals). As well as everything using two-spaced tabs so that it's easy to indent code even on mobile, which doesn't have a tab key and the best way is to hit spacebar twice instead of tab once.
    - Actually if we keep quiet on the opinionated style and mention how to escape double quotes it could also work.
    - Immediately after telling users how to escape double quotes, follow up with why notebrew follows the convention of single quotes in HTML instead of the more common double quotes.
- need to add the concept of permanent files to the guide
    permanent files: notes, pages, posts, output, site.json, pages/index.html, pages/404.html, posts/*/postlist.html, posts/*/post.html, posts/*/postlist.json
    affected actions: rename, cut, delete

# Using notebrew locally (as a static site generator, then push the output to SSG host) #

# Ops tutorial #

self hosting guide, starting from scratch/zero, does not assume any prior server knowledge (just good at following instructions)
step 0: can you purchase a VPS? Can you ssh into it/open a console and run commands?
step 1: can you download the binary? this is also how you update notebrew in the future, just redownload it. can it start?
step 2: can you talk to it over the internet using an ip address?
step 3: can you enable user accounts, create the default user and log in using the credentials?
step 4: can you talk to it over the internet using a domain name? (adding DNS records)
    step 4.5a: can you add a wildcard DNS record and connect to the site using www.{contentdomain}? Can you create a new site and connect to it using {siteName}.{contentdomain}? Can you then add a subdomain site?
    step 4.5b: can you add a new DNS record for a completely separate domain and connect to the site using {customDomain}? Can you then add a custom domain site?
step 5: can you talk to it over the internet using a domain name + SSL?
    - Note that it will prompt you to enter your email and stuff.
last step: can you make it run in the background? using start/stop or systemd. other methods like nohup or tmux are possible but if you know those things you probably don't need a tutorial for how to do it.

# Extra ops tutorials #

(for each step, also document how to undo it)
- switch from DirFS to DatabaseFS
    - switch database dialect from SQLite to Postgres or MySQL
    - switch from DirObjectStorage to S3ObjectStorage
- add a separate content domain
- add a CDN and img domain
- add an img cmd
- enable captcha for logins
- enable wildcard certificates using a DNS provider

# Admin tutorials #

admin steps:
- create a new invite (optionally with a site limit and storage limit) and let someone join
- delete existing invites
- generate a password reset link for somebody who has forgotten their password
- create sites
- create users
- assign sites to users (and optionally set the site owner) using the permissions command

notebrew permissions -user $user -site $site -grant -revoke -setowner

== general styles ==

background (dark/light)
background image?
banner image?
headings
- font (serif/sans-serif)
- color (accent/neutral)
- padding/margin
text
- font (serif/sans-serif)
- color (neutral)
- line-height
links
- color (accent)
- style (underline/highlight)
- default (accent)
- hover (accent)
- clicked (accent)
tables
blockquotes

== post styles ==

where to put creationTime/modificationTime?

== postlist styles ==

// always include an Atom feed link mention on the post list page!

// rule of thumb, as long as you show the preview you should always comb $.MentionedImages and $.UnmentionedImages

{{ template "/themes/notebrew.org/gallery/postlist.html" $ }}

notebrew.com/
notebrew.com/download/

default
gallery
steve
(for the rest of the themes, don't give a a descriptive name of what the postlist or header looks like. instead, name it the name of the color palette you are using)
banner (https://themes.gohugo.io/themes/hugo-dpsg/)
vertical (https://philpearl.github.io/post/dumb_ways_to_die_random_pointers/)
boxes
cards
full
background
news (it's a spin on cards)

[DONE]
- image gallery, instagram style | https://www.avogado6.com/
- boxed | https://www.eyeswift.com/category/blogging/
- minimal
    - bare essentials, brutalist html design
    - title and date only | https://drewdevault.com/
    - https://www.jefftk.com/
    - clean white, single line per post | https://orlp.net/blog/
    - white minimalist, title + preview + read more | http://antirez.com/latest/0
- cards
    - cards with image (if exists) | https://theblogtrottergirl.com/
    - I love this colorscheme: https://wordpress.com/theme/dark-academia/bokwoon846263759.wordpress.com?tab_filter=recommended
    - follow news, first post takes two slots
    - include image if exists: https://wordpress.com/theme/tenku/bokwoon846263759.wordpress.com?tab_filter=recommended
    - use the font inspirations from here: dark theme, date,title,preview kind of resembles a print magazine | https://craigmod.com/essays/

[MEH]
- single line per post with title and date only | https://eli.thegreenplace.net/archives/2024
- title + preview + read more | https://wordsandbuttons.online/
- title + preview, dates justified to the right | https://stevelosh.com/blog/
- line delimited | https://www.craigkerstiens.com/
- line delimited | https://akoutmos.com/
- all thing, everything | https://lemire.me/blog/
- classic title + preview + read more | https://www.depesz.com/
- all posts, everything, classic blog layout | https://www.positech.co.uk/cliffsblog/
- rachelbythebay | https://rachelbythebay.com/w/
- basic bihcc github pages | https://travisdowns.github.io/
- clean look title + preview + date | https://ognjen.io/
- single line per post with title and date only | https://ntietz.com/blog/
- boxed | https://danilafe.com/blog/
- title + preview + read more (w nice link accents) | https://lukeplant.me.uk/blog/
- single line per post | https://mazzo.li/archive.html
- classic blogspot | https://johorkaki.blogspot.com/
- single line per post | https://justinjaffray.com/posts/
- dark theme | https://aarontgrogg.com/
- https://wordpress.com/theme/tronar/bokwoon846263759.wordpress.com?tab_filter=recommended
- https://wordpress.com/theme/dark-academia/bokwoon846263759.wordpress.com?tab_filter=recommended
- https://wordpress.com/theme/marl/bokwoon846263759.wordpress.com?tab_filter=recommended
- https://wordpress.com/theme/reverie/bokwoon846263759.wordpress.com?tab_filter=recommended (nice idea but requires a background png)
- https://wordpress.com/theme/tenku/bokwoon846263759.wordpress.com?tab_filter=recommended
- https://wordpress.com/theme/bsoj/bokwoon846263759.wordpress.com?tab_filter=recommended
- single line per post (wild green) | https://www.lkhrs.com/blog/
- blogger title + preview + read more + image classic, with fallback if no image | https://theoccasionaltraveller.com/blog/
- dark theme | all thing, everything | https://kottke.org/
- cards + title + preview + read more | https://blog.vanillajava.blog/
- aha, the same wordpress theme used by theoccasionaltraveller | title + preview + read more + image | https://wheretheroadforks.com/blog/
- nice solid-color banner on top | all thing, everything I guess | https://prog21.dadgum.com/
- honestly a real basic-bitch looking layout, but the floating island is a nice idea | classic title + preview + read more | https://specbranch.com/
- honestly novel idea but looks ugly if there's only one post because it would be all the way towards the left: css grid layout left-to-right, going all the way down | title + preview + read more | https://lareviewofbooks.org/
- dark theme, banner + navbar + title, preview, read more | https://christianheilmann.com
- title on the left and dates on the right, with dotted lines connecting between them | https://www.jtolio.com/posts/
- white background, horizontal lines to delimit the date | https://www.johndcook.com/blog/
- ok don't follow the post list, but the black navbar and huge letter font is a real doozy | https://www.financialsamurai.com/
- left right left right post cards in the list, with prominent images per post | https://zitseng.com/
- nice logo on top | all thing, everything | https://stratechery.com/
- nice pink box on top "technically a blog" | single line per post | https://ntietz.com/blog/
- already covered by banner: all thing, everything | date pushed to the left, interesting | https://pointersgonewild.com/
- dark theme, highly replaceable color palette | title + preview + read more | https://aartaka.me/
- https://eieio.games/blog/
- https://unskilled.blog/
- https://www.scribblinggeek.com/
- https://cyrillschumacher.com/
- https://shkspr.mobi/blog/
- https://wesbos.com/
- https://robertheaton.com/
- https://acoup.blog/
- https://blog.ploeh.dk/
- https://trstringer.com/
- https://ddrscott.github.io/
- (background image!) https://askthepilot.com/essaysandstories/whats-the-matter-with-airports/
- https://web.archive.org/web/20210718135405/https://web.eecs.utk.edu/~azh/blog.html
- https://blog.jonudell.net/index/
- https://www.abandonedspaces.com/
- https://blog.sql-workbench.eu/post/
- https://danluu.com/
- https://tonsky.me/
- https://www.codevscolor.com/
- (background image!) https://kodare.net/
- implicit
    - solid colors w implicit separators are so fuckin' classy | title and date only | https://chidiwilliams.com/
    - another plain background, implicit lines blog | https://kevinlawler.com/

- TODO: change banner to use an svg image instead so that we can bundle all notebrew.com themes into one, and let the user decide freely switch between them. But to do that we cannot afford to have a fat image taking up space, so use an SVG instead.
    - utility.css still stays where it is, though. That way we don't have to duplicate 6kb for each style, and we keep the bundle small.
    - oh, I guess this also means we can no longer include preview images. It is up to the user to manually apply the theme and see if they like it.

TODO: fix all instances of `rg '\$.CDNDomain \$.IsDatabaseFS'` (we must use isImg and isObject instead. BUT we want to avoid looking up the AllowFileTypes map twice. How?)
    - {{ $attribute := getAttribute $file.FileName }}
    - {{ if $attribute.Has 32 }} <!-- AttributeImg -->
    - {{ if $attribute.Has 2  }} <!-- AttributeObject -->

- full
    - all posts, everything | https://charity.wtf/
    - cute fonts can make such a huge difference: https://wordpress.com/theme/lowfi/bokwoon846263759.wordpress.com?tab_filter=recommended

- monospace
    - https://wordpress.com/theme/pixl/bokwoon846263759.wordpress.com?tab_filter=recommended

- feisty/callout
    - I... don't know how to describe this. It's single line per post, all right | https://www.spicyweb.dev/blog
        - actually the background color is really nice too
    - I like the arrow after each title: only titles, very bold | https://arun.is/blog/

- box
    - nice gray background + white box | single line per post | https://www.akpain.net/blog/
        - the link colorscheme is good too

- rounded
    - https://www.anildash.com/ (great light mode too)

- space
    - a mix of victoria.dev and kodare.net, where we use a starry svg background from etsy and a translucent overlay with white text
    - a cool thing is how the blog title and tag line are only available on the home page, for the rest of the pages the post takes priority

- paper
    - https://rtpg.co/

- cream
    - https://djy.io/
    - incredibly tasteful colors and link style

- nice dark modes
    - single line per post | https://finmoorhouse.com/writing/
    - dark theme | straightforward list of posts | title on left, date on right | https://blog.wesleyac.com/
    - plain light background plus highly accented eye-popping links | single line per post | dark mode and light mode actually look good | https://tinyprojects.dev/
    - https://popey.com/blog/
    - https://benjamincongdon.me/
    - https://victoria.dev/
    - https://nipafx.dev/
    - https://susam.net/
    - https://brandur.org/articles
    - https://navendu.me/posts/nginx-is-fine/

- nice light modes
    - nice solid colors and clean solid lines | classic blogger title + preview + read more | https://www.raptitude.com/
    - I LOVE the bold yellow header with the light colored background: bold-ass colors, left-right-left-right alternating posts | https://pipewrenchmag.com/
    - very composable theme, just change the color palette | title and dates | https://marijnhaverbeke.nl/blog/
    - very classic title and tagline on right, navbar on left, plain simple title + preview + read more posts delimited by line | https://rantover.co.uk/
    - https://neustadt.fr/
    - https://manuelmoreale.com/bearblog-is-fun
        - text-decoration-skip-ink was the missing piece I needed to make link highlights. copy copy
    - https://benhoyt.com/
    - I love what he has done with the links: https://yosefk.com/blog/
    - https://momjian.us/main/blogs/pgblog/2021.html
    - https://brandur.org/articles
    - nice link accents: https://www.dampfkraft.com/
    - https://codahale.com/

- nice fonts
    - post list kind of sucks but take a look at the post, header looks nice | https://imagine27.com/post/go-is-korean/

- genuinely love these but the CSS is beyond my capability
    - https://enderman.ch/about
